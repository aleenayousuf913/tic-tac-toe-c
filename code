#include <stdio.h>
#include <stdlib.h>
#include <time.h>

char board[3][3];
char moveHistory[9];
int historyIndex = 0;

void resetBoard() {
    int i, j;
    historyIndex = 0;
    for (i = 0; i < 3; i++)
        for (j = 0; j < 3; j++)
            board[i][j] = ' ';
}

void printBoard() {
    printf("\n");
    printf("  0   1   2\n");
    for (int i = 0; i < 3; i++) {
        printf("%d ", i);
        for (int j = 0; j < 3; j++) {
            printf("%c", board[i][j]);
            if (j < 2) printf(" | ");
        }
        printf("\n");
        if (i < 2) printf(" ---+---+---\n");
    }
    printf("\n");
}

int checkWinner(char player) {
    // Rows and Columns
    for (int i = 0; i < 3; i++)
        if ((board[i][0] == player && board[i][1] == player && board[i][2] == player) ||
            (board[0][i] == player && board[1][i] == player && board[2][i] == player))
            return 1;

    // Diagonals
    if ((board[0][0] == player && board[1][1] == player && board[2][2] == player) ||
        (board[0][2] == player && board[1][1] == player && board[2][0] == player))
        return 1;

    return 0;
}

int isDraw() {
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (board[i][j] == ' ')
                return 0;
    return 1;
}

void makeMove(int row, int col, char player) {
    board[row][col] = player;
    moveHistory[historyIndex++] = player;
}

void getPlayerMove(char player) {
    int row, col;
    while (1) {
        printf("Player %c, enter row and column (e.g., 1 2): ", player);
        scanf("%d %d", &row, &col);
        if (row >= 0 && row < 3 && col >= 0 && col < 3 && board[row][col] == ' ') {
            makeMove(row, col, player);
            break;
        } else {
            printf("Invalid move. Try again.\n");
        }
    }
}

void getAIMove(char aiChar) {
    int row, col;
    srand(time(NULL));
    while (1) {
        row = rand() % 3;
        col = rand() % 3;
        if (board[row][col] == ' ') {
            printf("AI chooses: %d %d\n", row, col);
            makeMove(row, col, aiChar);
            break;
        }
    }
}

void printHistory() {
    printf("Move history: ");
    for (int i = 0; i < historyIndex; i++) {
        printf("%c ", moveHistory[i]);
    }
    printf("\n");
}

void playGame(int vsAI) {
    char player = 'X';
    resetBoard();

    while (1) {
        printBoard();
        printHistory();

        if (vsAI && player == 'O') {
            getAIMove(player);
        } else {
            getPlayerMove(player);
        }

        if (checkWinner(player)) {
            printBoard();
            printf("Player %c wins!\n", player);
            break;
        } else if (isDraw()) {
            printBoard();
            printf("It's a draw!\n");
            break;
        }

        player = (player == 'X') ? 'O' : 'X';
    }
}

int main() {
    int choice;

    while (1) {
        printf("\n--- Tic Tac Toe ---\n");
        printf("1. Two-player mode\n");
        printf("2. Play vs AI\n");
        printf("3. Quit\n");
        printf("Choose an option: ");
        scanf("%d", &choice);

        if (choice == 1)
            playGame(0);
        else if (choice == 2)
            playGame(1);
        else if (choice == 3)
            break;
        else
            printf("Invalid option. Try again.\n");
    }

    return 0;
}
